{"ast":null,"code":"import _toConsumableArray from \"/Users/heqinglin8/MyWork/react/react-easy-blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/heqinglin8/MyWork/react/react-easy-blog/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport zh from 'react-intl/locale-data/zh';\nimport ZH_WORDS from './assets/i18n/zh.json';\nimport EN_WORDS from './assets/i18n/en.json';\nimport store from './Store.js';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './assets/css/common.css';\naddLocaleData(_toConsumableArray(en).concat(_toConsumableArray(zh)));\nvar userLang = navigator.language || '';\nvar language = userLang.toLowerCase().substr(0, 2);\nvar locale;\nvar messages;\n\nif (language === 'zh') {\n  locale = 'zh';\n  messages = ZH_WORDS;\n} else if (language === 'en') {\n  locale = 'en';\n  messages = EN_WORDS;\n}\n\nReactDOM.render(React.createElement(IntlProvider, {\n  locale: locale,\n  messages: messages,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n})))), document.getElementById('root'));","map":{"version":3,"sources":["/Users/heqinglin8/MyWork/react/react-easy-blog/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","addLocaleData","IntlProvider","en","zh","ZH_WORDS","EN_WORDS","store","App","userLang","navigator","language","toLowerCase","substr","locale","messages","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,oBAAP;AACA,OAAO,yBAAP;AAEAP,aAAa,oBAAKE,EAAL,4BAAYC,EAAZ,GAAb;AAEA,IAAMK,QAAQ,GAAGC,SAAS,CAACC,QAAV,IAAsB,EAAvC;AACA,IAAMA,QAAQ,GAAGF,QAAQ,CAACG,WAAT,GAAuBC,MAAvB,CAA8B,CAA9B,EAAiC,CAAjC,CAAjB;AACA,IAAIC,MAAJ;AACA,IAAIC,QAAJ;;AAEA,IAAIJ,QAAQ,KAAK,IAAjB,EAAuB;AACrBG,EAAAA,MAAM,GAAG,IAAT;AACAC,EAAAA,QAAQ,GAAGV,QAAX;AACD,CAHD,MAGO,IAAIM,QAAQ,KAAK,IAAjB,EAAuB;AAC5BG,EAAAA,MAAM,GAAG,IAAT;AACAC,EAAAA,QAAQ,GAAGT,QAAX;AACD;;AAEDR,QAAQ,CAACkB,MAAT,CACE,oBAAC,YAAD;AAAc,EAAA,MAAM,EAAEF,MAAtB;AAA8B,EAAA,QAAQ,EAAEC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport zh from 'react-intl/locale-data/zh';\nimport ZH_WORDS from './assets/i18n/zh.json';\nimport EN_WORDS from './assets/i18n/en.json';\nimport store from './Store.js';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './assets/css/common.css';\n\naddLocaleData([...en, ...zh]);\n\nconst userLang = navigator.language || '';\nconst language = userLang.toLowerCase().substr(0, 2);\nlet locale;\nlet messages;\n\nif (language === 'zh') {\n  locale = 'zh';\n  messages = ZH_WORDS;\n} else if (language === 'en') {\n  locale = 'en';\n  messages = EN_WORDS;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </IntlProvider>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}