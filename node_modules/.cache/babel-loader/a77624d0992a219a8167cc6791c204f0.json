{"ast":null,"code":"import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerReducer } from 'react-router-redux';\nimport resetEnhancer from './enhancer/reset.js';\nimport { reducer as loadingReducer } from './components/loading';\nvar originalReducers = {\n  loading: loadingReducer,\n  routing: routerReducer\n};\nvar reducer = combineReducers(originalReducers);\nvar win = window;\nvar middlewares = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(require('redux-immutable-state-invariant').default());\n}\n\nvar storeEnhancers = compose(resetEnhancer, applyMiddleware.apply(void 0, middlewares), win && win.devToolsExtension ? win.devToolsExtension() : function (f) {\n  return f;\n});\nvar initialState = {};\nvar store = createStore(reducer, initialState, storeEnhancers);\nstore._reducers = originalReducers;\nexport default store;","map":{"version":3,"sources":["/Users/heqinglin8/MyWork/react/react-easy-start/src/Store.js"],"names":["applyMiddleware","createStore","combineReducers","compose","thunk","routerReducer","resetEnhancer","reducer","loadingReducer","originalReducers","loading","routing","win","window","middlewares","process","env","NODE_ENV","push","require","default","storeEnhancers","devToolsExtension","f","initialState","store","_reducers"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,OAAO,IAAIC,cAApB,QAA0C,sBAA1C;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAEF,cADc;AAEvBG,EAAAA,OAAO,EAAEN;AAFc,CAAzB;AAIA,IAAME,OAAO,GAAGL,eAAe,CAACO,gBAAD,CAA/B;AACA,IAAMG,GAAG,GAAGC,MAAZ;AACA,IAAMC,WAAW,GAAG,CAACV,KAAD,CAApB;;AAEA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBC,OAAO,CAAC,iCAAD,CAAP,CAA2CC,OAA3C,EAAjB;AACD;;AAED,IAAMC,cAAc,GAAGlB,OAAO,CAC5BG,aAD4B,EAE5BN,eAAe,MAAf,SAAmBc,WAAnB,CAF4B,EAG3BF,GAAG,IAAIA,GAAG,CAACU,iBAAZ,GAAiCV,GAAG,CAACU,iBAAJ,EAAjC,GAA2D,UAACC,CAAD;AAAA,SAAOA,CAAP;AAAA,CAH/B,CAA9B;AAMA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,KAAK,GAAGxB,WAAW,CAACM,OAAD,EAAUiB,YAAV,EAAwBH,cAAxB,CAAzB;AACAI,KAAK,CAACC,SAAN,GAAkBjB,gBAAlB;AACA,eAAegB,KAAf","sourcesContent":["import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerReducer } from 'react-router-redux';\nimport resetEnhancer from './enhancer/reset.js';\nimport { reducer as loadingReducer } from './components/loading';\n\nconst originalReducers = {\n  loading: loadingReducer,\n  routing: routerReducer\n};\nconst reducer = combineReducers(originalReducers);\nconst win = window;\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(require('redux-immutable-state-invariant').default());\n}\n\nconst storeEnhancers = compose(\n  resetEnhancer,\n  applyMiddleware(...middlewares),\n  (win && win.devToolsExtension) ? win.devToolsExtension() : (f) => f\n);\n\nconst initialState = {};\nconst store = createStore(reducer, initialState, storeEnhancers);\nstore._reducers = originalReducers;\nexport default store;"]},"metadata":{},"sourceType":"module"}